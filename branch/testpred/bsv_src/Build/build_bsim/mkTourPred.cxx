/*
 * Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
 * 
 * On Tue Oct 15 18:36:35 BST 2024
 * 
 */
#include "bluesim_primitives.h"
#include "mkTourPred.h"


/* Constructor */
MOD_mkTourPred::MOD_mkTourPred(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_choiceBht(simHdl, "choiceBht", this, 12u, 2u, 0u, 4095u),
    INST_gHistReg(simHdl, "gHistReg", this),
    INST_globalBht(simHdl, "globalBht", this, 12u, 2u, 0u, 4095u),
    INST_globalTakenVec(simHdl, "globalTakenVec", this, 1u),
    INST_localBht(simHdl, "localBht", this, 10u, 3u, 0u, 1023u),
    INST_localHistTab(simHdl, "localHistTab", this, 10u, 10u, 0u, 1023u),
    INST_pc_reg(simHdl, "pc_reg", this, 64u),
    INST_predCnt_dummy2_0(simHdl, "predCnt_dummy2_0", this, 1u, (tUInt8)1u),
    INST_predCnt_dummy2_1(simHdl, "predCnt_dummy2_1", this, 1u, (tUInt8)1u),
    INST_predCnt_dummy_0_0(simHdl, "predCnt_dummy_0_0", this, 1u, (tUInt8)0u),
    INST_predCnt_dummy_0_1(simHdl, "predCnt_dummy_0_1", this, 1u, (tUInt8)0u),
    INST_predCnt_dummy_1_0(simHdl, "predCnt_dummy_1_0", this, 1u, (tUInt8)0u),
    INST_predCnt_dummy_1_1(simHdl, "predCnt_dummy_1_1", this, 1u, (tUInt8)0u),
    INST_predCnt_lat_0(simHdl, "predCnt_lat_0", this, 1u, (tUInt8)0u),
    INST_predCnt_lat_1(simHdl, "predCnt_lat_1", this, 1u, (tUInt8)0u),
    INST_predCnt_rl(simHdl, "predCnt_rl", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_predRes_dummy2_0(simHdl, "predRes_dummy2_0", this, 1u, (tUInt8)1u),
    INST_predRes_dummy2_1(simHdl, "predRes_dummy2_1", this, 1u, (tUInt8)1u),
    INST_predRes_dummy_0_0(simHdl, "predRes_dummy_0_0", this, 1u, (tUInt8)0u),
    INST_predRes_dummy_0_1(simHdl, "predRes_dummy_0_1", this, 1u, (tUInt8)0u),
    INST_predRes_dummy_1_0(simHdl, "predRes_dummy_1_0", this, 1u, (tUInt8)0u),
    INST_predRes_dummy_1_1(simHdl, "predRes_dummy_1_1", this, 1u, (tUInt8)0u),
    INST_predRes_lat_0(simHdl, "predRes_lat_0", this, 1u, (tUInt8)0u),
    INST_predRes_lat_1(simHdl, "predRes_lat_1", this, 1u, (tUInt8)0u),
    INST_predRes_rl(simHdl, "predRes_rl", this, 1u, (tUInt8)0u, (tUInt8)0u),
    INST_useLocalVec(simHdl, "useLocalVec", this, 1u),
    PORT_RST_N((tUInt8)1u)
{
  PORT_EN_nextPc = false;
  PORT_EN_pred_0_pred = false;
  PORT_EN_update = false;
  PORT_EN_flush = false;
  PORT_nextPc_nextPc = 0llu;
  PORT_update_taken = false;
  PORT_update_train = 0llu;
  PORT_update_mispred = false;
  PORT_RDY_nextPc = false;
  PORT_pred_0_pred = 0llu;
  PORT_RDY_pred_0_pred = false;
  PORT_RDY_update = false;
  PORT_RDY_flush = false;
  PORT_flush_done = false;
  PORT_RDY_flush_done = false;
  symbol_count = 59u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTourPred::init_symbols_0()
{
  init_symbol(&symbols[0u], "CAN_FIRE_flush", SYM_DEF, &DEF_CAN_FIRE_flush, 1u);
  init_symbol(&symbols[1u], "CAN_FIRE_flush_done", SYM_DEF, &DEF_CAN_FIRE_flush_done, 1u);
  init_symbol(&symbols[2u], "CAN_FIRE_nextPc", SYM_DEF, &DEF_CAN_FIRE_nextPc, 1u);
  init_symbol(&symbols[3u], "CAN_FIRE_pred_0_pred", SYM_DEF, &DEF_CAN_FIRE_pred_0_pred, 1u);
  init_symbol(&symbols[4u],
	      "CAN_FIRE_RL_canonGlobalHist",
	      SYM_DEF,
	      &DEF_CAN_FIRE_RL_canonGlobalHist,
	      1u);
  init_symbol(&symbols[5u], "CAN_FIRE_RL_predCnt_canon", SYM_DEF, &DEF_CAN_FIRE_RL_predCnt_canon, 1u);
  init_symbol(&symbols[6u], "CAN_FIRE_RL_predRes_canon", SYM_DEF, &DEF_CAN_FIRE_RL_predRes_canon, 1u);
  init_symbol(&symbols[7u], "CAN_FIRE_update", SYM_DEF, &DEF_CAN_FIRE_update, 1u);
  init_symbol(&symbols[8u], "choiceBht", SYM_MODULE, &INST_choiceBht);
  init_symbol(&symbols[9u], "EN_flush", SYM_PORT, &PORT_EN_flush, 1u);
  init_symbol(&symbols[10u], "EN_nextPc", SYM_PORT, &PORT_EN_nextPc, 1u);
  init_symbol(&symbols[11u], "EN_pred_0_pred", SYM_PORT, &PORT_EN_pred_0_pred, 1u);
  init_symbol(&symbols[12u], "EN_update", SYM_PORT, &PORT_EN_update, 1u);
  init_symbol(&symbols[13u], "flush_done", SYM_PORT, &PORT_flush_done, 1u);
  init_symbol(&symbols[14u], "gHistReg", SYM_MODULE, &INST_gHistReg);
  init_symbol(&symbols[15u], "globalBht", SYM_MODULE, &INST_globalBht);
  init_symbol(&symbols[16u], "globalTakenVec", SYM_MODULE, &INST_globalTakenVec);
  init_symbol(&symbols[17u], "localBht", SYM_MODULE, &INST_localBht);
  init_symbol(&symbols[18u], "localHistTab", SYM_MODULE, &INST_localHistTab);
  init_symbol(&symbols[19u], "nextPc_nextPc", SYM_PORT, &PORT_nextPc_nextPc, 64u);
  init_symbol(&symbols[20u], "pc_reg", SYM_MODULE, &INST_pc_reg);
  init_symbol(&symbols[21u], "pred_0_pred", SYM_PORT, &PORT_pred_0_pred, 35u);
  init_symbol(&symbols[22u], "predCnt_dummy2_0", SYM_MODULE, &INST_predCnt_dummy2_0);
  init_symbol(&symbols[23u], "predCnt_dummy2_1", SYM_MODULE, &INST_predCnt_dummy2_1);
  init_symbol(&symbols[24u], "predCnt_dummy_0_0", SYM_MODULE, &INST_predCnt_dummy_0_0);
  init_symbol(&symbols[25u], "predCnt_dummy_0_1", SYM_MODULE, &INST_predCnt_dummy_0_1);
  init_symbol(&symbols[26u], "predCnt_dummy_1_0", SYM_MODULE, &INST_predCnt_dummy_1_0);
  init_symbol(&symbols[27u], "predCnt_dummy_1_1", SYM_MODULE, &INST_predCnt_dummy_1_1);
  init_symbol(&symbols[28u], "predCnt_lat_0", SYM_MODULE, &INST_predCnt_lat_0);
  init_symbol(&symbols[29u], "predCnt_lat_1", SYM_MODULE, &INST_predCnt_lat_1);
  init_symbol(&symbols[30u], "predCnt_rl", SYM_MODULE, &INST_predCnt_rl);
  init_symbol(&symbols[31u], "predRes_dummy2_0", SYM_MODULE, &INST_predRes_dummy2_0);
  init_symbol(&symbols[32u], "predRes_dummy2_1", SYM_MODULE, &INST_predRes_dummy2_1);
  init_symbol(&symbols[33u], "predRes_dummy_0_0", SYM_MODULE, &INST_predRes_dummy_0_0);
  init_symbol(&symbols[34u], "predRes_dummy_0_1", SYM_MODULE, &INST_predRes_dummy_0_1);
  init_symbol(&symbols[35u], "predRes_dummy_1_0", SYM_MODULE, &INST_predRes_dummy_1_0);
  init_symbol(&symbols[36u], "predRes_dummy_1_1", SYM_MODULE, &INST_predRes_dummy_1_1);
  init_symbol(&symbols[37u], "predRes_lat_0", SYM_MODULE, &INST_predRes_lat_0);
  init_symbol(&symbols[38u], "predRes_lat_1", SYM_MODULE, &INST_predRes_lat_1);
  init_symbol(&symbols[39u], "predRes_rl", SYM_MODULE, &INST_predRes_rl);
  init_symbol(&symbols[40u], "RDY_flush", SYM_PORT, &PORT_RDY_flush, 1u);
  init_symbol(&symbols[41u], "RDY_flush_done", SYM_PORT, &PORT_RDY_flush_done, 1u);
  init_symbol(&symbols[42u], "RDY_nextPc", SYM_PORT, &PORT_RDY_nextPc, 1u);
  init_symbol(&symbols[43u], "RDY_pred_0_pred", SYM_PORT, &PORT_RDY_pred_0_pred, 1u);
  init_symbol(&symbols[44u], "RDY_update", SYM_PORT, &PORT_RDY_update, 1u);
  init_symbol(&symbols[45u], "RL_canonGlobalHist", SYM_RULE);
  init_symbol(&symbols[46u], "RL_predCnt_canon", SYM_RULE);
  init_symbol(&symbols[47u], "RL_predRes_canon", SYM_RULE);
  init_symbol(&symbols[48u], "update_mispred", SYM_PORT, &PORT_update_mispred, 1u);
  init_symbol(&symbols[49u], "update_taken", SYM_PORT, &PORT_update_taken, 1u);
  init_symbol(&symbols[50u], "update_train", SYM_PORT, &PORT_update_train, 34u);
  init_symbol(&symbols[51u], "useLocalVec", SYM_MODULE, &INST_useLocalVec);
  init_symbol(&symbols[52u], "WILL_FIRE_flush", SYM_DEF, &DEF_WILL_FIRE_flush, 1u);
  init_symbol(&symbols[53u], "WILL_FIRE_nextPc", SYM_DEF, &DEF_WILL_FIRE_nextPc, 1u);
  init_symbol(&symbols[54u], "WILL_FIRE_pred_0_pred", SYM_DEF, &DEF_WILL_FIRE_pred_0_pred, 1u);
  init_symbol(&symbols[55u],
	      "WILL_FIRE_RL_canonGlobalHist",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_canonGlobalHist,
	      1u);
  init_symbol(&symbols[56u],
	      "WILL_FIRE_RL_predCnt_canon",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_predCnt_canon,
	      1u);
  init_symbol(&symbols[57u],
	      "WILL_FIRE_RL_predRes_canon",
	      SYM_DEF,
	      &DEF_WILL_FIRE_RL_predRes_canon,
	      1u);
  init_symbol(&symbols[58u], "WILL_FIRE_update", SYM_DEF, &DEF_WILL_FIRE_update, 1u);
}


/* Rule actions */

void MOD_mkTourPred::RL_predCnt_canon()
{
  tUInt8 DEF_upd__h1678;
  tUInt8 DEF_x__h1564;
  tUInt8 DEF_x_wget__h901;
  DEF_predCnt_rl__h4503 = INST_predCnt_rl.METH_read();
  DEF_x_wget__h901 = INST_predCnt_lat_1.METH_wget();
  DEF_predCnt_lat_0_whas____d4 = INST_predCnt_lat_0.METH_whas();
  DEF_x_wget__h852 = INST_predCnt_lat_0.METH_wget();
  DEF_upd__h1678 = DEF_x_wget__h901;
  DEF_upd__h1705 = DEF_x_wget__h852;
  DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8 = DEF_predCnt_lat_0_whas____d4 ? DEF_upd__h1705 : DEF_predCnt_rl__h4503;
  DEF_x__h1564 = INST_predCnt_lat_1.METH_whas() ? DEF_upd__h1678 : DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8;
  INST_predCnt_rl.METH_write(DEF_x__h1564);
}

void MOD_mkTourPred::RL_predRes_canon()
{
  tUInt8 DEF_upd__h2707;
  tUInt8 DEF_x__h2593;
  tUInt8 DEF_x_wget__h1937;
  DEF_predRes_rl__h4967 = INST_predRes_rl.METH_read();
  DEF_x_wget__h1937 = INST_predRes_lat_1.METH_wget();
  DEF_predRes_lat_0_whas____d13 = INST_predRes_lat_0.METH_whas();
  DEF_x_wget__h1888 = INST_predRes_lat_0.METH_wget();
  DEF_upd__h2734 = DEF_x_wget__h1888;
  DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17 = DEF_predRes_lat_0_whas____d13 ? DEF_upd__h2734 : DEF_predRes_rl__h4967;
  DEF_upd__h2707 = DEF_x_wget__h1937;
  DEF_x__h2593 = INST_predRes_lat_1.METH_whas() ? DEF_upd__h2707 : DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17;
  INST_predRes_rl.METH_write(DEF_x__h2593);
}

void MOD_mkTourPred::RL_canonGlobalHist()
{
  tUInt8 DEF_num__h2856;
  tUInt8 DEF_taken__h2855;
  tUInt8 DEF_cnt_BIT_1___h3622;
  tUInt8 DEF_cnt_BIT_1___h3452;
  tUInt32 DEF_x__h3401;
  tUInt8 DEF_cnt__h3391;
  tUInt32 DEF_i__h3394;
  tUInt8 DEF_cnt__h3613;
  DEF_predCnt_dummy2_1_read____d21 = INST_predCnt_dummy2_1.METH_read();
  DEF_predCnt_rl__h4503 = INST_predCnt_rl.METH_read();
  DEF_curGHist__h2774 = INST_gHistReg.METH_history();
  DEF_predRes_rl__h4967 = INST_predRes_rl.METH_read();
  DEF_predRes_dummy2_1_read____d19 = INST_predRes_dummy2_1.METH_read();
  DEF_predRes_lat_0_whas____d13 = INST_predRes_lat_0.METH_whas();
  DEF_x_wget__h1888 = INST_predRes_lat_0.METH_wget();
  DEF_predCnt_lat_0_whas____d4 = INST_predCnt_lat_0.METH_whas();
  DEF_x_wget__h852 = INST_predCnt_lat_0.METH_wget();
  DEF_upd__h2734 = DEF_x_wget__h1888;
  DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17 = DEF_predRes_lat_0_whas____d13 ? DEF_upd__h2734 : DEF_predRes_rl__h4967;
  DEF_upd__h1705 = DEF_x_wget__h852;
  DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8 = DEF_predCnt_lat_0_whas____d4 ? DEF_upd__h1705 : DEF_predCnt_rl__h4503;
  DEF_taken__h2855 = DEF_predRes_dummy2_1_read____d19 && DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17;
  DEF_num__h2856 = DEF_predCnt_dummy2_1_read____d21 && DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8;
  DEF_x__h3401 = primShiftR32(13u,
			      13u,
			      (tUInt32)(8191u & ((((tUInt32)(DEF_taken__h2855)) << 12u) | DEF_curGHist__h2774)),
			      1u,
			      (tUInt8)(DEF_num__h2856));
  DEF_i__h3394 = (tUInt32)(4095u & DEF_x__h3401);
  DEF_cnt__h3613 = INST_choiceBht.METH_sub(DEF_i__h3394);
  DEF_cnt__h3391 = INST_globalBht.METH_sub(DEF_i__h3394);
  DEF_cnt_BIT_1___h3452 = (tUInt8)(DEF_cnt__h3391 >> 1u);
  DEF_cnt_BIT_1___h3622 = (tUInt8)(DEF_cnt__h3613 >> 1u);
  INST_gHistReg.METH_addHistory(DEF_taken__h2855, DEF_num__h2856);
  INST_globalTakenVec.METH_write(DEF_cnt_BIT_1___h3452);
  INST_useLocalVec.METH_write(DEF_cnt_BIT_1___h3622);
  INST_predRes_lat_1.METH_wset((tUInt8)0u);
  INST_predRes_dummy2_1.METH_write((tUInt8)1u);
  INST_predRes_dummy_1_0.METH_wset(DEF_predRes_lat_0_whas____d13);
  INST_predCnt_lat_1.METH_wset((tUInt8)0u);
  INST_predCnt_dummy_1_0.METH_wset(DEF_predCnt_lat_0_whas____d4);
  INST_predCnt_dummy2_1.METH_write((tUInt8)1u);
}


/* Methods */

tUInt8 MOD_mkTourPred::METH_flush_done()
{
  PORT_flush_done = (tUInt8)1u;
  return PORT_flush_done;
}

tUInt8 MOD_mkTourPred::METH_RDY_flush_done()
{
  DEF_CAN_FIRE_flush_done = (tUInt8)1u;
  PORT_RDY_flush_done = DEF_CAN_FIRE_flush_done;
  return PORT_RDY_flush_done;
}

void MOD_mkTourPred::METH_nextPc(tUInt64 ARG_nextPc_nextPc)
{
  PORT_EN_nextPc = (tUInt8)1u;
  DEF_WILL_FIRE_nextPc = (tUInt8)1u;
  PORT_nextPc_nextPc = ARG_nextPc_nextPc;
  INST_pc_reg.METH_write(ARG_nextPc_nextPc);
}

tUInt8 MOD_mkTourPred::METH_RDY_nextPc()
{
  DEF_CAN_FIRE_nextPc = (tUInt8)1u;
  PORT_RDY_nextPc = DEF_CAN_FIRE_nextPc;
  return PORT_RDY_nextPc;
}

tUInt64 MOD_mkTourPred::METH_pred_0_pred()
{
  tUInt32 DEF_localHistTab_sub_pc_reg_2_BITS_11_TO_2_3_4_CON_ETC___d59;
  tUInt8 DEF_x__h4414;
  tUInt32 DEF_y_avValue_train_globalHist__h5073;
  tUInt8 DEF_y__h4992;
  tUInt8 DEF_n__read__h4413;
  tUInt8 DEF_res__h4570;
  tUInt8 DEF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_predCnt__ETC___d39;
  tUInt8 DEF_IF_IF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_pr_ETC___d49;
  tUInt8 DEF_x__h4591;
  tUInt8 DEF_cnt_BIT_2___h4786;
  tUInt8 DEF_globalTakenVec__h4863;
  tUInt8 DEF_useLocalVec__h4713;
  tUInt8 DEF_cnt__h4721;
  tUInt32 DEF_x__h5114;
  tUInt32 DEF_localHist__h4387;
  tUInt64 DEF_pc_reg__h4775;
  tUInt8 DEF_predCnt_dummy2_0_read____d31;
  PORT_EN_pred_0_pred = (tUInt8)1u;
  DEF_WILL_FIRE_pred_0_pred = (tUInt8)1u;
  DEF_predCnt_dummy2_1_read____d21 = INST_predCnt_dummy2_1.METH_read();
  DEF_predCnt_dummy2_0_read____d31 = INST_predCnt_dummy2_0.METH_read();
  DEF_predCnt_rl__h4503 = INST_predCnt_rl.METH_read();
  DEF_pc_reg__h4775 = INST_pc_reg.METH_read();
  DEF_curGHist__h2774 = INST_gHistReg.METH_history();
  DEF_x__h5114 = (tUInt32)(1023u & (DEF_pc_reg__h4775 >> 2u));
  DEF_localHist__h4387 = INST_localHistTab.METH_sub(DEF_x__h5114);
  DEF_cnt__h4721 = INST_localBht.METH_sub(DEF_localHist__h4387);
  DEF_predRes_rl__h4967 = INST_predRes_rl.METH_read();
  DEF_predRes_dummy2_1_read____d19 = INST_predRes_dummy2_1.METH_read();
  DEF_useLocalVec__h4713 = INST_useLocalVec.METH_read();
  DEF_cnt_BIT_2___h4786 = (tUInt8)(DEF_cnt__h4721 >> 2u);
  DEF_globalTakenVec__h4863 = INST_globalTakenVec.METH_read();
  DEF_IF_IF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_pr_ETC___d49 = DEF_useLocalVec__h4713 ? DEF_cnt_BIT_2___h4786 : DEF_globalTakenVec__h4863;
  DEF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_predCnt__ETC___d39 = (!DEF_predCnt_dummy2_0_read____d31 || !DEF_predCnt_dummy2_1_read____d21) || !DEF_predCnt_rl__h4503;
  DEF_res__h4570 = (INST_predRes_dummy2_0.METH_read() && DEF_predRes_dummy2_1_read____d19) && DEF_predRes_rl__h4967;
  DEF_n__read__h4413 = (DEF_predCnt_dummy2_0_read____d31 && DEF_predCnt_dummy2_1_read____d21) && DEF_predCnt_rl__h4503;
  DEF_y__h4992 = (tUInt8)1u & ~DEF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_predCnt__ETC___d39;
  DEF_x__h4591 = DEF_IF_IF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_pr_ETC___d49 ? DEF_res__h4570 | DEF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_predCnt__ETC___d39 : DEF_res__h4570 & DEF_y__h4992;
  DEF_y_avValue_train_globalHist__h5073 = primShiftR32(12u,
						       12u,
						       (tUInt32)(DEF_curGHist__h2774),
						       1u,
						       (tUInt8)(DEF_n__read__h4413));
  DEF_x__h4414 = (tUInt8)1u & (DEF_n__read__h4413 + (tUInt8)1u);
  DEF_localHistTab_sub_pc_reg_2_BITS_11_TO_2_3_4_CON_ETC___d59 = 4194303u & ((((DEF_localHist__h4387 << 12u) | (((tUInt32)(DEF_globalTakenVec__h4863)) << 11u)) | (((tUInt32)(DEF_cnt_BIT_2___h4786)) << 10u)) | DEF_x__h5114);
  PORT_pred_0_pred = 34359738367llu & (((((tUInt64)(DEF_IF_IF_NOT_predCnt_dummy2_0_read__1_5_OR_NOT_pr_ETC___d49)) << 34u) | (((tUInt64)(DEF_y_avValue_train_globalHist__h5073)) << 22u)) | (tUInt64)(DEF_localHistTab_sub_pc_reg_2_BITS_11_TO_2_3_4_CON_ETC___d59));
  INST_predCnt_lat_0.METH_wset(DEF_x__h4414);
  INST_predCnt_dummy2_0.METH_write((tUInt8)1u);
  INST_predRes_lat_0.METH_wset(DEF_x__h4591);
  INST_predRes_dummy2_0.METH_write((tUInt8)1u);
  return PORT_pred_0_pred;
}

tUInt8 MOD_mkTourPred::METH_RDY_pred_0_pred()
{
  DEF_CAN_FIRE_pred_0_pred = (tUInt8)1u;
  PORT_RDY_pred_0_pred = DEF_CAN_FIRE_pred_0_pred;
  return PORT_RDY_pred_0_pred;
}

void MOD_mkTourPred::METH_update(tUInt8 ARG_update_taken,
				 tUInt64 ARG_update_train,
				 tUInt8 ARG_update_mispred)
{
  tUInt32 DEF_x__h5216;
  tUInt32 DEF_newHist__h5156;
  tUInt8 DEF_NOT_update_train_BIT_11_3_EQ_update_train_BIT__ETC___d86;
  tUInt8 DEF_x__h5335;
  tUInt8 DEF_x__h5415;
  tUInt8 DEF_x__h5260;
  tUInt8 DEF_update_train_BIT_10___d84;
  tUInt32 DEF_train_localHist_BITS_9_TO_1___h5244;
  tUInt32 DEF_i__h5215;
  tUInt32 DEF_train_globalHist_BITS_11_TO_1___h5188;
  tUInt8 DEF_globalCnt__h5324;
  tUInt32 DEF_i__h5436;
  tUInt8 DEF_choiceCnt__h5413;
  tUInt32 DEF_i__h5286;
  tUInt8 DEF_localCnt__h5249;
  PORT_EN_update = (tUInt8)1u;
  DEF_WILL_FIRE_update = (tUInt8)1u;
  PORT_update_taken = ARG_update_taken;
  PORT_update_train = ARG_update_train;
  PORT_update_mispred = ARG_update_mispred;
  DEF_i__h5286 = (tUInt32)(1023u & (ARG_update_train >> 12u));
  DEF_localCnt__h5249 = INST_localBht.METH_sub(DEF_i__h5286);
  DEF_i__h5436 = (tUInt32)(ARG_update_train >> 22u);
  DEF_choiceCnt__h5413 = INST_choiceBht.METH_sub(DEF_i__h5436);
  DEF_globalCnt__h5324 = INST_globalBht.METH_sub(DEF_i__h5436);
  DEF_train_globalHist_BITS_11_TO_1___h5188 = (tUInt32)(ARG_update_train >> 23u);
  DEF_i__h5215 = (tUInt32)(1023u & ARG_update_train);
  DEF_train_localHist_BITS_9_TO_1___h5244 = (tUInt32)(511u & (ARG_update_train >> 13u));
  DEF_update_train_BIT_10___d84 = (tUInt8)((tUInt8)1u & (ARG_update_train >> 10u));
  DEF_x__h5260 = ARG_update_taken ? (DEF_localCnt__h5249 == (tUInt8)7u ? DEF_localCnt__h5249 : (tUInt8)7u & (DEF_localCnt__h5249 + (tUInt8)1u)) : (DEF_localCnt__h5249 == (tUInt8)0u ? DEF_localCnt__h5249 : (tUInt8)7u & (DEF_localCnt__h5249 - (tUInt8)1u));
  DEF_x__h5415 = DEF_update_train_BIT_10___d84 == ARG_update_taken ? (DEF_choiceCnt__h5413 == (tUInt8)3u ? DEF_choiceCnt__h5413 : (tUInt8)3u & (DEF_choiceCnt__h5413 + (tUInt8)1u)) : (DEF_choiceCnt__h5413 == (tUInt8)0u ? DEF_choiceCnt__h5413 : (tUInt8)3u & (DEF_choiceCnt__h5413 - (tUInt8)1u));
  DEF_x__h5335 = ARG_update_taken ? (DEF_globalCnt__h5324 == (tUInt8)3u ? DEF_globalCnt__h5324 : (tUInt8)3u & (DEF_globalCnt__h5324 + (tUInt8)1u)) : (DEF_globalCnt__h5324 == (tUInt8)0u ? DEF_globalCnt__h5324 : (tUInt8)3u & (DEF_globalCnt__h5324 - (tUInt8)1u));
  DEF_NOT_update_train_BIT_11_3_EQ_update_train_BIT__ETC___d86 = !(((tUInt8)((tUInt8)1u & (ARG_update_train >> 11u))) == DEF_update_train_BIT_10___d84);
  DEF_newHist__h5156 = 4095u & ((((tUInt32)(ARG_update_taken)) << 11u) | DEF_train_globalHist_BITS_11_TO_1___h5188);
  DEF_x__h5216 = 1023u & ((((tUInt32)(ARG_update_taken)) << 9u) | DEF_train_localHist_BITS_9_TO_1___h5244);
  if (ARG_update_mispred)
    INST_gHistReg.METH_redirect(DEF_newHist__h5156);
  INST_localHistTab.METH_upd(DEF_i__h5215, DEF_x__h5216);
  INST_localBht.METH_upd(DEF_i__h5286, DEF_x__h5260);
  INST_globalBht.METH_upd(DEF_i__h5436, DEF_x__h5335);
  if (DEF_NOT_update_train_BIT_11_3_EQ_update_train_BIT__ETC___d86)
    INST_choiceBht.METH_upd(DEF_i__h5436, DEF_x__h5415);
}

tUInt8 MOD_mkTourPred::METH_RDY_update()
{
  DEF_CAN_FIRE_update = (tUInt8)1u;
  PORT_RDY_update = DEF_CAN_FIRE_update;
  return PORT_RDY_update;
}

void MOD_mkTourPred::METH_flush()
{
  PORT_EN_flush = (tUInt8)1u;
  DEF_WILL_FIRE_flush = (tUInt8)1u;
}

tUInt8 MOD_mkTourPred::METH_RDY_flush()
{
  DEF_CAN_FIRE_flush = (tUInt8)1u;
  PORT_RDY_flush = DEF_CAN_FIRE_flush;
  return PORT_RDY_flush;
}


/* Reset routines */

void MOD_mkTourPred::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_predRes_rl.reset_RST(ARG_rst_in);
  INST_predCnt_rl.reset_RST(ARG_rst_in);
  INST_gHistReg.reset_RST_N(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTourPred::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTourPred::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_choiceBht.dump_state(indent + 2u);
  INST_gHistReg.dump_state(indent + 2u);
  INST_globalBht.dump_state(indent + 2u);
  INST_globalTakenVec.dump_state(indent + 2u);
  INST_localBht.dump_state(indent + 2u);
  INST_localHistTab.dump_state(indent + 2u);
  INST_pc_reg.dump_state(indent + 2u);
  INST_predCnt_dummy2_0.dump_state(indent + 2u);
  INST_predCnt_dummy2_1.dump_state(indent + 2u);
  INST_predCnt_dummy_0_0.dump_state(indent + 2u);
  INST_predCnt_dummy_0_1.dump_state(indent + 2u);
  INST_predCnt_dummy_1_0.dump_state(indent + 2u);
  INST_predCnt_dummy_1_1.dump_state(indent + 2u);
  INST_predCnt_lat_0.dump_state(indent + 2u);
  INST_predCnt_lat_1.dump_state(indent + 2u);
  INST_predCnt_rl.dump_state(indent + 2u);
  INST_predRes_dummy2_0.dump_state(indent + 2u);
  INST_predRes_dummy2_1.dump_state(indent + 2u);
  INST_predRes_dummy_0_0.dump_state(indent + 2u);
  INST_predRes_dummy_0_1.dump_state(indent + 2u);
  INST_predRes_dummy_1_0.dump_state(indent + 2u);
  INST_predRes_dummy_1_1.dump_state(indent + 2u);
  INST_predRes_lat_0.dump_state(indent + 2u);
  INST_predRes_lat_1.dump_state(indent + 2u);
  INST_predRes_rl.dump_state(indent + 2u);
  INST_useLocalVec.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTourPred::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 69u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_canonGlobalHist", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_predCnt_canon", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_RL_predRes_canon", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_flush", 1u);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_flush_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_nextPc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_pred_0_pred", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "CAN_FIRE_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_canonGlobalHist", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_predCnt_canon", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_RL_predRes_canon", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_flush", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_nextPc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_pred_0_pred", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "curGHist__h2774", 12u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predCnt_dummy2_1_read____d21", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predCnt_lat_0_whas____d4", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predCnt_rl__h4503", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predRes_dummy2_1_read____d19", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predRes_lat_0_whas____d13", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "predRes_rl__h4967", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "upd__h1705", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "upd__h2734", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h1888", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x_wget__h852", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_flush", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_nextPc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_pred_0_pred", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_update", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_flush", 1u);
  vcd_write_def(sim_hdl, num++, "RDY_flush_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_nextPc", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_pred_0_pred", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "RDY_update", 1u);
  vcd_write_def(sim_hdl, num++, "flush_done", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "nextPc_nextPc", 64u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pred_0_pred", 35u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "update_mispred", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "update_taken", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "update_train", 34u);
  num = INST_choiceBht.dump_VCD_defs(num);
  num = INST_globalBht.dump_VCD_defs(num);
  num = INST_globalTakenVec.dump_VCD_defs(num);
  num = INST_localBht.dump_VCD_defs(num);
  num = INST_localHistTab.dump_VCD_defs(num);
  num = INST_pc_reg.dump_VCD_defs(num);
  num = INST_predCnt_dummy2_0.dump_VCD_defs(num);
  num = INST_predCnt_dummy2_1.dump_VCD_defs(num);
  num = INST_predCnt_dummy_0_0.dump_VCD_defs(num);
  num = INST_predCnt_dummy_0_1.dump_VCD_defs(num);
  num = INST_predCnt_dummy_1_0.dump_VCD_defs(num);
  num = INST_predCnt_dummy_1_1.dump_VCD_defs(num);
  num = INST_predCnt_lat_0.dump_VCD_defs(num);
  num = INST_predCnt_lat_1.dump_VCD_defs(num);
  num = INST_predCnt_rl.dump_VCD_defs(num);
  num = INST_predRes_dummy2_0.dump_VCD_defs(num);
  num = INST_predRes_dummy2_1.dump_VCD_defs(num);
  num = INST_predRes_dummy_0_0.dump_VCD_defs(num);
  num = INST_predRes_dummy_0_1.dump_VCD_defs(num);
  num = INST_predRes_dummy_1_0.dump_VCD_defs(num);
  num = INST_predRes_dummy_1_1.dump_VCD_defs(num);
  num = INST_predRes_lat_0.dump_VCD_defs(num);
  num = INST_predRes_lat_1.dump_VCD_defs(num);
  num = INST_predRes_rl.dump_VCD_defs(num);
  num = INST_useLocalVec.dump_VCD_defs(num);
  if (levels != 1u)
  {
    unsigned int l = levels == 0u ? 0u : levels - 1u;
    num = INST_gHistReg.dump_VCD_defs(l);
  }
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTourPred::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTourPred &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
  if (levels != 1u)
    vcd_submodules(dt, levels - 1u, backing);
}

void MOD_mkTourPred::vcd_defs(tVCDDumpType dt, MOD_mkTourPred &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 12u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 64u);
    vcd_write_x(sim_hdl, num++, 35u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 34u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_CAN_FIRE_RL_canonGlobalHist) != DEF_CAN_FIRE_RL_canonGlobalHist)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_canonGlobalHist, 1u);
	backing.DEF_CAN_FIRE_RL_canonGlobalHist = DEF_CAN_FIRE_RL_canonGlobalHist;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_predCnt_canon) != DEF_CAN_FIRE_RL_predCnt_canon)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_predCnt_canon, 1u);
	backing.DEF_CAN_FIRE_RL_predCnt_canon = DEF_CAN_FIRE_RL_predCnt_canon;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_RL_predRes_canon) != DEF_CAN_FIRE_RL_predRes_canon)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_RL_predRes_canon, 1u);
	backing.DEF_CAN_FIRE_RL_predRes_canon = DEF_CAN_FIRE_RL_predRes_canon;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_flush) != DEF_CAN_FIRE_flush)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_flush, 1u);
	backing.DEF_CAN_FIRE_flush = DEF_CAN_FIRE_flush;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_flush_done) != DEF_CAN_FIRE_flush_done)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_flush_done, 1u);
	backing.DEF_CAN_FIRE_flush_done = DEF_CAN_FIRE_flush_done;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_nextPc) != DEF_CAN_FIRE_nextPc)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_nextPc, 1u);
	backing.DEF_CAN_FIRE_nextPc = DEF_CAN_FIRE_nextPc;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_pred_0_pred) != DEF_CAN_FIRE_pred_0_pred)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_pred_0_pred, 1u);
	backing.DEF_CAN_FIRE_pred_0_pred = DEF_CAN_FIRE_pred_0_pred;
      }
      ++num;
      if ((backing.DEF_CAN_FIRE_update) != DEF_CAN_FIRE_update)
      {
	vcd_write_val(sim_hdl, num, DEF_CAN_FIRE_update, 1u);
	backing.DEF_CAN_FIRE_update = DEF_CAN_FIRE_update;
      }
      ++num;
      if ((backing.DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8) != DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8, 1u);
	backing.DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8 = DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8;
      }
      ++num;
      if ((backing.DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17) != DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17, 1u);
	backing.DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17 = DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_canonGlobalHist) != DEF_WILL_FIRE_RL_canonGlobalHist)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_canonGlobalHist, 1u);
	backing.DEF_WILL_FIRE_RL_canonGlobalHist = DEF_WILL_FIRE_RL_canonGlobalHist;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_predCnt_canon) != DEF_WILL_FIRE_RL_predCnt_canon)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_predCnt_canon, 1u);
	backing.DEF_WILL_FIRE_RL_predCnt_canon = DEF_WILL_FIRE_RL_predCnt_canon;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_RL_predRes_canon) != DEF_WILL_FIRE_RL_predRes_canon)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_RL_predRes_canon, 1u);
	backing.DEF_WILL_FIRE_RL_predRes_canon = DEF_WILL_FIRE_RL_predRes_canon;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_flush) != DEF_WILL_FIRE_flush)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_flush, 1u);
	backing.DEF_WILL_FIRE_flush = DEF_WILL_FIRE_flush;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_nextPc) != DEF_WILL_FIRE_nextPc)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_nextPc, 1u);
	backing.DEF_WILL_FIRE_nextPc = DEF_WILL_FIRE_nextPc;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_pred_0_pred) != DEF_WILL_FIRE_pred_0_pred)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_pred_0_pred, 1u);
	backing.DEF_WILL_FIRE_pred_0_pred = DEF_WILL_FIRE_pred_0_pred;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_update) != DEF_WILL_FIRE_update)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_update, 1u);
	backing.DEF_WILL_FIRE_update = DEF_WILL_FIRE_update;
      }
      ++num;
      if ((backing.DEF_curGHist__h2774) != DEF_curGHist__h2774)
      {
	vcd_write_val(sim_hdl, num, DEF_curGHist__h2774, 12u);
	backing.DEF_curGHist__h2774 = DEF_curGHist__h2774;
      }
      ++num;
      if ((backing.DEF_predCnt_dummy2_1_read____d21) != DEF_predCnt_dummy2_1_read____d21)
      {
	vcd_write_val(sim_hdl, num, DEF_predCnt_dummy2_1_read____d21, 1u);
	backing.DEF_predCnt_dummy2_1_read____d21 = DEF_predCnt_dummy2_1_read____d21;
      }
      ++num;
      if ((backing.DEF_predCnt_lat_0_whas____d4) != DEF_predCnt_lat_0_whas____d4)
      {
	vcd_write_val(sim_hdl, num, DEF_predCnt_lat_0_whas____d4, 1u);
	backing.DEF_predCnt_lat_0_whas____d4 = DEF_predCnt_lat_0_whas____d4;
      }
      ++num;
      if ((backing.DEF_predCnt_rl__h4503) != DEF_predCnt_rl__h4503)
      {
	vcd_write_val(sim_hdl, num, DEF_predCnt_rl__h4503, 1u);
	backing.DEF_predCnt_rl__h4503 = DEF_predCnt_rl__h4503;
      }
      ++num;
      if ((backing.DEF_predRes_dummy2_1_read____d19) != DEF_predRes_dummy2_1_read____d19)
      {
	vcd_write_val(sim_hdl, num, DEF_predRes_dummy2_1_read____d19, 1u);
	backing.DEF_predRes_dummy2_1_read____d19 = DEF_predRes_dummy2_1_read____d19;
      }
      ++num;
      if ((backing.DEF_predRes_lat_0_whas____d13) != DEF_predRes_lat_0_whas____d13)
      {
	vcd_write_val(sim_hdl, num, DEF_predRes_lat_0_whas____d13, 1u);
	backing.DEF_predRes_lat_0_whas____d13 = DEF_predRes_lat_0_whas____d13;
      }
      ++num;
      if ((backing.DEF_predRes_rl__h4967) != DEF_predRes_rl__h4967)
      {
	vcd_write_val(sim_hdl, num, DEF_predRes_rl__h4967, 1u);
	backing.DEF_predRes_rl__h4967 = DEF_predRes_rl__h4967;
      }
      ++num;
      if ((backing.DEF_upd__h1705) != DEF_upd__h1705)
      {
	vcd_write_val(sim_hdl, num, DEF_upd__h1705, 1u);
	backing.DEF_upd__h1705 = DEF_upd__h1705;
      }
      ++num;
      if ((backing.DEF_upd__h2734) != DEF_upd__h2734)
      {
	vcd_write_val(sim_hdl, num, DEF_upd__h2734, 1u);
	backing.DEF_upd__h2734 = DEF_upd__h2734;
      }
      ++num;
      if ((backing.DEF_x_wget__h1888) != DEF_x_wget__h1888)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h1888, 1u);
	backing.DEF_x_wget__h1888 = DEF_x_wget__h1888;
      }
      ++num;
      if ((backing.DEF_x_wget__h852) != DEF_x_wget__h852)
      {
	vcd_write_val(sim_hdl, num, DEF_x_wget__h852, 1u);
	backing.DEF_x_wget__h852 = DEF_x_wget__h852;
      }
      ++num;
      if ((backing.PORT_EN_flush) != PORT_EN_flush)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_flush, 1u);
	backing.PORT_EN_flush = PORT_EN_flush;
      }
      ++num;
      if ((backing.PORT_EN_nextPc) != PORT_EN_nextPc)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_nextPc, 1u);
	backing.PORT_EN_nextPc = PORT_EN_nextPc;
      }
      ++num;
      if ((backing.PORT_EN_pred_0_pred) != PORT_EN_pred_0_pred)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_pred_0_pred, 1u);
	backing.PORT_EN_pred_0_pred = PORT_EN_pred_0_pred;
      }
      ++num;
      if ((backing.PORT_EN_update) != PORT_EN_update)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_update, 1u);
	backing.PORT_EN_update = PORT_EN_update;
      }
      ++num;
      if ((backing.PORT_RDY_flush) != PORT_RDY_flush)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_flush, 1u);
	backing.PORT_RDY_flush = PORT_RDY_flush;
      }
      ++num;
      if ((backing.PORT_RDY_flush_done) != PORT_RDY_flush_done)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_flush_done, 1u);
	backing.PORT_RDY_flush_done = PORT_RDY_flush_done;
      }
      ++num;
      if ((backing.PORT_RDY_nextPc) != PORT_RDY_nextPc)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_nextPc, 1u);
	backing.PORT_RDY_nextPc = PORT_RDY_nextPc;
      }
      ++num;
      if ((backing.PORT_RDY_pred_0_pred) != PORT_RDY_pred_0_pred)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_pred_0_pred, 1u);
	backing.PORT_RDY_pred_0_pred = PORT_RDY_pred_0_pred;
      }
      ++num;
      if ((backing.PORT_RDY_update) != PORT_RDY_update)
      {
	vcd_write_val(sim_hdl, num, PORT_RDY_update, 1u);
	backing.PORT_RDY_update = PORT_RDY_update;
      }
      ++num;
      if ((backing.PORT_flush_done) != PORT_flush_done)
      {
	vcd_write_val(sim_hdl, num, PORT_flush_done, 1u);
	backing.PORT_flush_done = PORT_flush_done;
      }
      ++num;
      if ((backing.PORT_nextPc_nextPc) != PORT_nextPc_nextPc)
      {
	vcd_write_val(sim_hdl, num, PORT_nextPc_nextPc, 64u);
	backing.PORT_nextPc_nextPc = PORT_nextPc_nextPc;
      }
      ++num;
      if ((backing.PORT_pred_0_pred) != PORT_pred_0_pred)
      {
	vcd_write_val(sim_hdl, num, PORT_pred_0_pred, 35u);
	backing.PORT_pred_0_pred = PORT_pred_0_pred;
      }
      ++num;
      if ((backing.PORT_update_mispred) != PORT_update_mispred)
      {
	vcd_write_val(sim_hdl, num, PORT_update_mispred, 1u);
	backing.PORT_update_mispred = PORT_update_mispred;
      }
      ++num;
      if ((backing.PORT_update_taken) != PORT_update_taken)
      {
	vcd_write_val(sim_hdl, num, PORT_update_taken, 1u);
	backing.PORT_update_taken = PORT_update_taken;
      }
      ++num;
      if ((backing.PORT_update_train) != PORT_update_train)
      {
	vcd_write_val(sim_hdl, num, PORT_update_train, 34u);
	backing.PORT_update_train = PORT_update_train;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_canonGlobalHist, 1u);
      backing.DEF_CAN_FIRE_RL_canonGlobalHist = DEF_CAN_FIRE_RL_canonGlobalHist;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_predCnt_canon, 1u);
      backing.DEF_CAN_FIRE_RL_predCnt_canon = DEF_CAN_FIRE_RL_predCnt_canon;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_RL_predRes_canon, 1u);
      backing.DEF_CAN_FIRE_RL_predRes_canon = DEF_CAN_FIRE_RL_predRes_canon;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_flush, 1u);
      backing.DEF_CAN_FIRE_flush = DEF_CAN_FIRE_flush;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_flush_done, 1u);
      backing.DEF_CAN_FIRE_flush_done = DEF_CAN_FIRE_flush_done;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_nextPc, 1u);
      backing.DEF_CAN_FIRE_nextPc = DEF_CAN_FIRE_nextPc;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_pred_0_pred, 1u);
      backing.DEF_CAN_FIRE_pred_0_pred = DEF_CAN_FIRE_pred_0_pred;
      vcd_write_val(sim_hdl, num++, DEF_CAN_FIRE_update, 1u);
      backing.DEF_CAN_FIRE_update = DEF_CAN_FIRE_update;
      vcd_write_val(sim_hdl, num++, DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8, 1u);
      backing.DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8 = DEF_IF_predCnt_lat_0_whas_THEN_IF_predCnt_lat_0_wh_ETC___d8;
      vcd_write_val(sim_hdl, num++, DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17, 1u);
      backing.DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17 = DEF_IF_predRes_lat_0_whas__3_THEN_IF_predRes_lat_0_ETC___d17;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_canonGlobalHist, 1u);
      backing.DEF_WILL_FIRE_RL_canonGlobalHist = DEF_WILL_FIRE_RL_canonGlobalHist;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_predCnt_canon, 1u);
      backing.DEF_WILL_FIRE_RL_predCnt_canon = DEF_WILL_FIRE_RL_predCnt_canon;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_RL_predRes_canon, 1u);
      backing.DEF_WILL_FIRE_RL_predRes_canon = DEF_WILL_FIRE_RL_predRes_canon;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_flush, 1u);
      backing.DEF_WILL_FIRE_flush = DEF_WILL_FIRE_flush;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_nextPc, 1u);
      backing.DEF_WILL_FIRE_nextPc = DEF_WILL_FIRE_nextPc;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_pred_0_pred, 1u);
      backing.DEF_WILL_FIRE_pred_0_pred = DEF_WILL_FIRE_pred_0_pred;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_update, 1u);
      backing.DEF_WILL_FIRE_update = DEF_WILL_FIRE_update;
      vcd_write_val(sim_hdl, num++, DEF_curGHist__h2774, 12u);
      backing.DEF_curGHist__h2774 = DEF_curGHist__h2774;
      vcd_write_val(sim_hdl, num++, DEF_predCnt_dummy2_1_read____d21, 1u);
      backing.DEF_predCnt_dummy2_1_read____d21 = DEF_predCnt_dummy2_1_read____d21;
      vcd_write_val(sim_hdl, num++, DEF_predCnt_lat_0_whas____d4, 1u);
      backing.DEF_predCnt_lat_0_whas____d4 = DEF_predCnt_lat_0_whas____d4;
      vcd_write_val(sim_hdl, num++, DEF_predCnt_rl__h4503, 1u);
      backing.DEF_predCnt_rl__h4503 = DEF_predCnt_rl__h4503;
      vcd_write_val(sim_hdl, num++, DEF_predRes_dummy2_1_read____d19, 1u);
      backing.DEF_predRes_dummy2_1_read____d19 = DEF_predRes_dummy2_1_read____d19;
      vcd_write_val(sim_hdl, num++, DEF_predRes_lat_0_whas____d13, 1u);
      backing.DEF_predRes_lat_0_whas____d13 = DEF_predRes_lat_0_whas____d13;
      vcd_write_val(sim_hdl, num++, DEF_predRes_rl__h4967, 1u);
      backing.DEF_predRes_rl__h4967 = DEF_predRes_rl__h4967;
      vcd_write_val(sim_hdl, num++, DEF_upd__h1705, 1u);
      backing.DEF_upd__h1705 = DEF_upd__h1705;
      vcd_write_val(sim_hdl, num++, DEF_upd__h2734, 1u);
      backing.DEF_upd__h2734 = DEF_upd__h2734;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h1888, 1u);
      backing.DEF_x_wget__h1888 = DEF_x_wget__h1888;
      vcd_write_val(sim_hdl, num++, DEF_x_wget__h852, 1u);
      backing.DEF_x_wget__h852 = DEF_x_wget__h852;
      vcd_write_val(sim_hdl, num++, PORT_EN_flush, 1u);
      backing.PORT_EN_flush = PORT_EN_flush;
      vcd_write_val(sim_hdl, num++, PORT_EN_nextPc, 1u);
      backing.PORT_EN_nextPc = PORT_EN_nextPc;
      vcd_write_val(sim_hdl, num++, PORT_EN_pred_0_pred, 1u);
      backing.PORT_EN_pred_0_pred = PORT_EN_pred_0_pred;
      vcd_write_val(sim_hdl, num++, PORT_EN_update, 1u);
      backing.PORT_EN_update = PORT_EN_update;
      vcd_write_val(sim_hdl, num++, PORT_RDY_flush, 1u);
      backing.PORT_RDY_flush = PORT_RDY_flush;
      vcd_write_val(sim_hdl, num++, PORT_RDY_flush_done, 1u);
      backing.PORT_RDY_flush_done = PORT_RDY_flush_done;
      vcd_write_val(sim_hdl, num++, PORT_RDY_nextPc, 1u);
      backing.PORT_RDY_nextPc = PORT_RDY_nextPc;
      vcd_write_val(sim_hdl, num++, PORT_RDY_pred_0_pred, 1u);
      backing.PORT_RDY_pred_0_pred = PORT_RDY_pred_0_pred;
      vcd_write_val(sim_hdl, num++, PORT_RDY_update, 1u);
      backing.PORT_RDY_update = PORT_RDY_update;
      vcd_write_val(sim_hdl, num++, PORT_flush_done, 1u);
      backing.PORT_flush_done = PORT_flush_done;
      vcd_write_val(sim_hdl, num++, PORT_nextPc_nextPc, 64u);
      backing.PORT_nextPc_nextPc = PORT_nextPc_nextPc;
      vcd_write_val(sim_hdl, num++, PORT_pred_0_pred, 35u);
      backing.PORT_pred_0_pred = PORT_pred_0_pred;
      vcd_write_val(sim_hdl, num++, PORT_update_mispred, 1u);
      backing.PORT_update_mispred = PORT_update_mispred;
      vcd_write_val(sim_hdl, num++, PORT_update_taken, 1u);
      backing.PORT_update_taken = PORT_update_taken;
      vcd_write_val(sim_hdl, num++, PORT_update_train, 34u);
      backing.PORT_update_train = PORT_update_train;
    }
}

void MOD_mkTourPred::vcd_prims(tVCDDumpType dt, MOD_mkTourPred &backing)
{
  INST_choiceBht.dump_VCD(dt, backing.INST_choiceBht);
  INST_globalBht.dump_VCD(dt, backing.INST_globalBht);
  INST_globalTakenVec.dump_VCD(dt, backing.INST_globalTakenVec);
  INST_localBht.dump_VCD(dt, backing.INST_localBht);
  INST_localHistTab.dump_VCD(dt, backing.INST_localHistTab);
  INST_pc_reg.dump_VCD(dt, backing.INST_pc_reg);
  INST_predCnt_dummy2_0.dump_VCD(dt, backing.INST_predCnt_dummy2_0);
  INST_predCnt_dummy2_1.dump_VCD(dt, backing.INST_predCnt_dummy2_1);
  INST_predCnt_dummy_0_0.dump_VCD(dt, backing.INST_predCnt_dummy_0_0);
  INST_predCnt_dummy_0_1.dump_VCD(dt, backing.INST_predCnt_dummy_0_1);
  INST_predCnt_dummy_1_0.dump_VCD(dt, backing.INST_predCnt_dummy_1_0);
  INST_predCnt_dummy_1_1.dump_VCD(dt, backing.INST_predCnt_dummy_1_1);
  INST_predCnt_lat_0.dump_VCD(dt, backing.INST_predCnt_lat_0);
  INST_predCnt_lat_1.dump_VCD(dt, backing.INST_predCnt_lat_1);
  INST_predCnt_rl.dump_VCD(dt, backing.INST_predCnt_rl);
  INST_predRes_dummy2_0.dump_VCD(dt, backing.INST_predRes_dummy2_0);
  INST_predRes_dummy2_1.dump_VCD(dt, backing.INST_predRes_dummy2_1);
  INST_predRes_dummy_0_0.dump_VCD(dt, backing.INST_predRes_dummy_0_0);
  INST_predRes_dummy_0_1.dump_VCD(dt, backing.INST_predRes_dummy_0_1);
  INST_predRes_dummy_1_0.dump_VCD(dt, backing.INST_predRes_dummy_1_0);
  INST_predRes_dummy_1_1.dump_VCD(dt, backing.INST_predRes_dummy_1_1);
  INST_predRes_lat_0.dump_VCD(dt, backing.INST_predRes_lat_0);
  INST_predRes_lat_1.dump_VCD(dt, backing.INST_predRes_lat_1);
  INST_predRes_rl.dump_VCD(dt, backing.INST_predRes_rl);
  INST_useLocalVec.dump_VCD(dt, backing.INST_useLocalVec);
}

void MOD_mkTourPred::vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkTourPred &backing)
{
  INST_gHistReg.dump_VCD(dt, levels, backing.INST_gHistReg);
}
