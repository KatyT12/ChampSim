/*
 * Generated by Bluespec Compiler, version 2024.01 (build ae2a2fc6)
 * 
 * On Tue Oct 22 20:31:56 BST 2024
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTestbench.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTestbench::MODEL_mkTestbench()
{
  mkTestbench_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTestbench()
{
  MODEL_mkTestbench *model = new MODEL_mkTestbench();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTestbench &INST_top = *((MOD_mkTestbench *)(instance_ptr));
	 tUInt8 DEF_INST_top_INST_predictor_m_INST_gHistReg_DEF_m_redirectHist_whas____d1;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d49;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d78;
	 tUInt8 DEF_INST_top_DEF_NOT_debug_6___d47;
	 tUInt8 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d112;
	 tUInt8 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d116;
	 tUInt8 DEF_INST_top_DEF_abort_whas_AND_abort_wget___d6;
	 tUInt8 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d33;
	 tUInt8 DEF_INST_top_DEF_start_wire_whas_AND_start_wire_wget___d30;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_OR_star_ETC___d38;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_3___d69;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_7___d43;
	 tUInt8 DEF_INST_top_DEF_message_1_BIT_144___d42;
	 tUInt8 DEF_INST_top_DEF_debug__h10655;
	 tUInt8 DEF_INST_top_DEF_abort_wget____d5;
	 tUInt8 DEF_INST_top_DEF_abort_whas____d4;
	 tUInt8 DEF_INST_top_DEF_start_reg__h28498;
	 tUInt8 DEF_INST_top_DEF_running__h28584;
	 tUInt8 DEF_INST_top_DEF_start_wire_wget____d9;
	 tUInt8 DEF_INST_top_DEF_start_wire_whas____d7;
	 tUInt8 DEF_INST_top_DEF_start_reg_1__h24701;
	 tUInt8 DEF_INST_top_DEF_state_fired__h24703;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read____d31;
	 INST_top.INST_predictor_m.PORT_EN_nextPc = (tUInt8)0u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_nextPc = (tUInt8)0u;
	 INST_top.INST_predictor_m.PORT_EN_pred_0_pred = (tUInt8)0u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_pred_0_pred = (tUInt8)0u;
	 INST_top.INST_predictor_m.PORT_EN_update = (tUInt8)0u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_update = (tUInt8)0u;
	 INST_top.INST_predictor_m.INST_gHistReg.PORT_EN_redirect = (tUInt8)0u;
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_redirect = (tUInt8)0u;
	 INST_top.INST_predictor_m.INST_gHistReg.PORT_EN_addHistory = (tUInt8)0u;
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_addHistory = (tUInt8)0u;
	 DEF_INST_top_DEF_state_mkFSMstate_read____d31 = INST_top.INST_state_mkFSMstate.METH_read();
	 DEF_INST_top_DEF_abort_whas____d4 = INST_top.INST_abort.METH_whas();
	 DEF_INST_top_DEF_abort_wget____d5 = INST_top.INST_abort.METH_wget();
	 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 = !DEF_INST_top_DEF_abort_whas____d4 || !DEF_INST_top_DEF_abort_wget____d5;
	 INST_top.DEF_CAN_FIRE_RL_action_l103c9 = DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_action_l103c9 = INST_top.DEF_CAN_FIRE_RL_action_l103c9;
	 INST_top.INST_predictor_m.METH_RDY_nextPc();
	 INST_top.DEF_message___d41 = INST_top.INST_message.METH_read();
	 DEF_INST_top_DEF_message_1_BIT_144___d42 = INST_top.DEF_message___d41.get_bits_in_word8(4u,
												 16u,
												 1u);
	 DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_3___d69 = DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)3u;
	 INST_top.DEF_CAN_FIRE_RL_action_l107c26 = DEF_INST_top_DEF_message_1_BIT_144___d42 && (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_3___d69);
	 INST_top.DEF_WILL_FIRE_RL_action_l107c26 = INST_top.DEF_CAN_FIRE_RL_action_l107c26;
	 INST_top.INST_predictor_m.METH_RDY_pred_0_pred();
	 INST_top.DEF_CAN_FIRE_RL_action_l108c17 = DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)4u;
	 INST_top.DEF_WILL_FIRE_RL_action_l108c17 = INST_top.DEF_CAN_FIRE_RL_action_l108c17;
	 INST_top.INST_predictor_m.METH_RDY_update();
	 INST_top.INST_predictor_m.INST_gHistReg.METH_RDY_redirect();
	 DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_7___d43 = DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)7u;
	 INST_top.DEF_CAN_FIRE_RL_action_l113c23 = !DEF_INST_top_DEF_message_1_BIT_144___d42 && (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && (DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_3___d69 || DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_7___d43));
	 INST_top.DEF_WILL_FIRE_RL_action_l113c23 = INST_top.DEF_CAN_FIRE_RL_action_l113c23;
	 DEF_INST_top_DEF_debug__h10655 = INST_top.INST_debug.METH_read();
	 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d78 = DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)5u;
	 INST_top.DEF_CAN_FIRE_RL_action_l109c45 = DEF_INST_top_DEF_debug__h10655 && DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d78;
	 INST_top.DEF_WILL_FIRE_RL_action_l109c45 = INST_top.DEF_CAN_FIRE_RL_action_l109c45;
	 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d49 = DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)8u;
	 INST_top.DEF_CAN_FIRE_RL_action_l114c38 = DEF_INST_top_DEF_debug__h10655 && DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d49;
	 INST_top.DEF_WILL_FIRE_RL_action_l114c38 = INST_top.DEF_CAN_FIRE_RL_action_l114c38;
	 DEF_INST_top_DEF_state_fired__h24703 = INST_top.INST_state_fired.METH_read();
	 DEF_INST_top_DEF_start_reg_1__h24701 = INST_top.INST_start_reg_1.METH_read();
	 DEF_INST_top_DEF_running__h28584 = INST_top.INST_running.METH_read();
	 DEF_INST_top_DEF_start_reg__h28498 = INST_top.INST_start_reg.METH_read();
	 DEF_INST_top_DEF_abort_whas_AND_abort_wget___d6 = DEF_INST_top_DEF_abort_whas____d4 && DEF_INST_top_DEF_abort_wget____d5;
	 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d33 = DEF_INST_top_DEF_abort_whas_AND_abort_wget___d6 || DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)0u;
	 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d112 = DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d33 && (!DEF_INST_top_DEF_start_reg_1__h24701 || DEF_INST_top_DEF_state_fired__h24703);
	 DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d116 = DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d112 && !DEF_INST_top_DEF_start_reg__h28498;
	 INST_top.DEF_CAN_FIRE_RL_auto_finish = DEF_INST_top_DEF_running__h28584 && DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d116;
	 INST_top.DEF_WILL_FIRE_RL_auto_finish = INST_top.DEF_CAN_FIRE_RL_auto_finish;
	 INST_top.DEF_CAN_FIRE_RL_restart = (DEF_INST_top_DEF_start_reg_1__h24701 && !DEF_INST_top_DEF_state_fired__h24703) && DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28;
	 INST_top.DEF_WILL_FIRE_RL_restart = INST_top.DEF_CAN_FIRE_RL_restart;
	 INST_top.DEF_CAN_FIRE_RL_auto_start = DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d116 && !DEF_INST_top_DEF_running__h28584;
	 INST_top.DEF_WILL_FIRE_RL_auto_start = INST_top.DEF_CAN_FIRE_RL_auto_start;
	 INST_top.DEF_CAN_FIRE_RL_fsm_start = DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d112 && DEF_INST_top_DEF_start_reg__h28498;
	 INST_top.DEF_WILL_FIRE_RL_fsm_start = INST_top.DEF_CAN_FIRE_RL_fsm_start;
	 INST_top.DEF_CAN_FIRE_RL_start_reg__dreg_update = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_start_reg__dreg_update = INST_top.DEF_CAN_FIRE_RL_start_reg__dreg_update;
	 INST_top.DEF_CAN_FIRE_RL_state_every = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_state_every = INST_top.DEF_CAN_FIRE_RL_state_every;
	 INST_top.DEF_CAN_FIRE_RL_state_fired__dreg_update = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_state_fired__dreg_update = INST_top.DEF_CAN_FIRE_RL_state_fired__dreg_update;
	 INST_top.DEF_CAN_FIRE___me_check_10 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_10 = INST_top.DEF_CAN_FIRE___me_check_10;
	 INST_top.DEF_CAN_FIRE___me_check_11 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_11 = INST_top.DEF_CAN_FIRE___me_check_11;
	 INST_top.DEF_CAN_FIRE___me_check_12 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_12 = INST_top.DEF_CAN_FIRE___me_check_12;
	 INST_top.DEF_CAN_FIRE___me_check_5 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_5 = INST_top.DEF_CAN_FIRE___me_check_5;
	 INST_top.DEF_CAN_FIRE___me_check_6 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_6 = INST_top.DEF_CAN_FIRE___me_check_6;
	 INST_top.DEF_CAN_FIRE___me_check_7 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_7 = INST_top.DEF_CAN_FIRE___me_check_7;
	 INST_top.DEF_CAN_FIRE___me_check_8 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_8 = INST_top.DEF_CAN_FIRE___me_check_8;
	 INST_top.DEF_CAN_FIRE___me_check_9 = (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE___me_check_9 = INST_top.DEF_CAN_FIRE___me_check_9;
	 INST_top.INST_predictor_m.INST_gHistReg.METH_RDY_addHistory();
	 INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_canonGlobalHist = (tUInt8)1u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_canonGlobalHist = INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_canonGlobalHist;
	 INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_predCnt_canon = (tUInt8)1u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_predCnt_canon = INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_predCnt_canon;
	 INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_predRes_canon = (tUInt8)1u;
	 INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_predRes_canon = INST_top.INST_predictor_m.DEF_CAN_FIRE_RL_predRes_canon;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l103c9)
	   INST_top.RL_action_l103c9();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l107c26)
	   INST_top.RL_action_l107c26();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l108c17)
	   INST_top.RL_action_l108c17();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l113c23)
	   INST_top.RL_action_l113c23();
	 DEF_INST_top_INST_predictor_m_INST_gHistReg_DEF_m_redirectHist_whas____d1 = INST_top.INST_predictor_m.INST_gHistReg.INST_m_redirectHist.METH_whas();
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_CAN_FIRE_RL_m_canon_redirect = DEF_INST_top_INST_predictor_m_INST_gHistReg_DEF_m_redirectHist_whas____d1;
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_RL_m_canon_redirect = INST_top.INST_predictor_m.INST_gHistReg.DEF_CAN_FIRE_RL_m_canon_redirect;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l109c45)
	   INST_top.RL_action_l109c45();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l114c38)
	   INST_top.RL_action_l114c38();
	 if (INST_top.DEF_WILL_FIRE_RL_restart)
	   INST_top.RL_restart();
	 if (INST_top.DEF_WILL_FIRE___me_check_12)
	   INST_top.__me_check_12();
	 if (INST_top.DEF_WILL_FIRE_RL_fsm_start)
	   INST_top.RL_fsm_start();
	 DEF_INST_top_DEF_start_wire_whas____d7 = INST_top.INST_start_wire.METH_whas();
	 DEF_INST_top_DEF_start_wire_wget____d9 = INST_top.INST_start_wire.METH_wget();
	 DEF_INST_top_DEF_start_wire_whas_AND_start_wire_wget___d30 = DEF_INST_top_DEF_start_wire_whas____d7 && DEF_INST_top_DEF_start_wire_wget____d9;
	 INST_top.DEF_CAN_FIRE_RL_action_l102c29 = (DEF_INST_top_DEF_start_wire_whas_AND_start_wire_wget___d30 && DEF_INST_top_DEF_abort_whas_AND_abort_wget_OR_state_mkFSMstate__ETC___d33) && !(((INST_top.DEF_CAN_FIRE_RL_action_l114c38 || INST_top.DEF_CAN_FIRE_RL_action_l113c23) || (INST_top.DEF_CAN_FIRE_RL_action_l109c45 || INST_top.DEF_CAN_FIRE_RL_action_l108c17)) || (INST_top.DEF_CAN_FIRE_RL_action_l107c26 || INST_top.DEF_CAN_FIRE_RL_action_l103c9));
	 INST_top.DEF_WILL_FIRE_RL_action_l102c29 = INST_top.DEF_CAN_FIRE_RL_action_l102c29;
	 DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_OR_star_ETC___d38 = DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 || DEF_INST_top_DEF_start_wire_whas_AND_start_wire_wget___d30;
	 DEF_INST_top_DEF_NOT_debug_6___d47 = !DEF_INST_top_DEF_debug__h10655;
	 INST_top.DEF_CAN_FIRE_RL_action_l105c15 = (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_OR_star_ETC___d38 && (((DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)2u) || ((DEF_INST_top_DEF_message_1_BIT_144___d42 && (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read__1_EQ_7___d43)) || (DEF_INST_top_DEF_NOT_debug_6___d47 && DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d49))) || (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)9u))) && !(((INST_top.DEF_CAN_FIRE_RL_fsm_start || INST_top.DEF_CAN_FIRE_RL_action_l114c38) || (INST_top.DEF_CAN_FIRE_RL_action_l113c23 || INST_top.DEF_CAN_FIRE_RL_action_l109c45)) || ((INST_top.DEF_CAN_FIRE_RL_action_l108c17 || INST_top.DEF_CAN_FIRE_RL_action_l107c26) || INST_top.DEF_CAN_FIRE_RL_action_l103c9));
	 INST_top.DEF_WILL_FIRE_RL_action_l105c15 = INST_top.DEF_CAN_FIRE_RL_action_l105c15;
	 INST_top.DEF_CAN_FIRE_RL_action_l110c33 = (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_OR_star_ETC___d38 && ((DEF_INST_top_DEF_NOT_debug_6___d47 && DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7_8_AND_sta_ETC___d78) || (DEF_INST_top_DEF_NOT_abort_whas_6_OR_NOT_abort_wget_7___d28 && DEF_INST_top_DEF_state_mkFSMstate_read____d31 == (tUInt8)6u))) && !(((INST_top.DEF_CAN_FIRE_RL_fsm_start || INST_top.DEF_CAN_FIRE_RL_action_l114c38) || (INST_top.DEF_CAN_FIRE_RL_action_l113c23 || INST_top.DEF_CAN_FIRE_RL_action_l109c45)) || ((INST_top.DEF_CAN_FIRE_RL_action_l108c17 || INST_top.DEF_CAN_FIRE_RL_action_l107c26) || INST_top.DEF_CAN_FIRE_RL_action_l103c9));
	 INST_top.DEF_WILL_FIRE_RL_action_l110c33 = INST_top.DEF_CAN_FIRE_RL_action_l110c33;
	 INST_top.DEF_CAN_FIRE_RL_state_handle_abort = (DEF_INST_top_DEF_abort_whas_AND_abort_wget___d6 && (!DEF_INST_top_DEF_start_wire_whas____d7 || !DEF_INST_top_DEF_start_wire_wget____d9)) && !(((INST_top.DEF_CAN_FIRE_RL_action_l114c38 || INST_top.DEF_CAN_FIRE_RL_action_l113c23) || (INST_top.DEF_CAN_FIRE_RL_action_l109c45 || INST_top.DEF_CAN_FIRE_RL_action_l108c17)) || ((INST_top.DEF_CAN_FIRE_RL_action_l107c26 || INST_top.DEF_CAN_FIRE_RL_action_l103c9) || INST_top.DEF_CAN_FIRE_RL_restart));
	 INST_top.DEF_WILL_FIRE_RL_state_handle_abort = INST_top.DEF_CAN_FIRE_RL_state_handle_abort;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l102c29)
	   INST_top.RL_action_l102c29();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l110c33)
	   INST_top.RL_action_l110c33();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l105c15)
	   INST_top.RL_action_l105c15();
	 if (INST_top.DEF_WILL_FIRE_RL_auto_finish)
	   INST_top.RL_auto_finish();
	 if (INST_top.DEF_WILL_FIRE_RL_state_every)
	   INST_top.RL_state_every();
	 if (INST_top.DEF_WILL_FIRE_RL_state_handle_abort)
	   INST_top.RL_state_handle_abort();
	 if (INST_top.DEF_WILL_FIRE___me_check_5)
	   INST_top.__me_check_5();
	 if (INST_top.DEF_WILL_FIRE___me_check_6)
	   INST_top.__me_check_6();
	 if (INST_top.DEF_WILL_FIRE___me_check_7)
	   INST_top.__me_check_7();
	 if (INST_top.DEF_WILL_FIRE___me_check_8)
	   INST_top.__me_check_8();
	 if (INST_top.DEF_WILL_FIRE___me_check_9)
	   INST_top.__me_check_9();
	 if (INST_top.DEF_WILL_FIRE___me_check_11)
	   INST_top.__me_check_11();
	 if (INST_top.DEF_WILL_FIRE___me_check_10)
	   INST_top.__me_check_10();
	 if (INST_top.DEF_WILL_FIRE_RL_auto_start)
	   INST_top.RL_auto_start();
	 if (INST_top.DEF_WILL_FIRE_RL_start_reg__dreg_update)
	   INST_top.RL_start_reg__dreg_update();
	 if (INST_top.DEF_WILL_FIRE_RL_state_fired__dreg_update)
	   INST_top.RL_state_fired__dreg_update();
	 if (INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_canonGlobalHist)
	   INST_top.INST_predictor_m.RL_canonGlobalHist();
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_CAN_FIRE_RL_m_canon_addHistory = !DEF_INST_top_INST_predictor_m_INST_gHistReg_DEF_m_redirectHist_whas____d1 && INST_top.INST_predictor_m.INST_gHistReg.INST_m_addHist.METH_whas();
	 INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_RL_m_canon_addHistory = INST_top.INST_predictor_m.INST_gHistReg.DEF_CAN_FIRE_RL_m_canon_addHistory;
	 if (INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_predCnt_canon)
	   INST_top.INST_predictor_m.RL_predCnt_canon();
	 if (INST_top.INST_predictor_m.DEF_WILL_FIRE_RL_predRes_canon)
	   INST_top.INST_predictor_m.RL_predRes_canon();
	 if (INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_RL_m_canon_addHistory)
	   INST_top.INST_predictor_m.INST_gHistReg.RL_m_canon_addHistory();
	 if (INST_top.INST_predictor_m.INST_gHistReg.DEF_WILL_FIRE_RL_m_canon_redirect)
	   INST_top.INST_predictor_m.INST_gHistReg.RL_m_canon_redirect();
	 INST_top.INST_state_fired_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_overlap_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_set_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_abort.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_reg_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_wire.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_dummy_1_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_dummy_1_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_dummy_0_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_dummy_0_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_lat_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predRes_lat_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_dummy_1_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_dummy_1_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_dummy_0_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_dummy_0_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_lat_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_predCnt_lat_0.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_gHistReg.INST_m_redirectHist.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_predictor_m.INST_gHistReg.INST_m_addHist.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_predictor_m.INST_gHistReg.INST_m_hist.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_predictor_m.INST_predCnt_rl.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_predictor_m.INST_predRes_rl.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_prediction.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_message.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_debug.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_pendingTrainInfo.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_start_reg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_start_reg_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_mkFSMstate.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_fired.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_can_overlap.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_running.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTestbench::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTestbench_instance = new MOD_mkTestbench(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTestbench_instance->INST_predictor_m.INST_gHistReg.INST_m_addHist.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_gHistReg.INST_m_redirectHist.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_gHistReg.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_lat_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_lat_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_dummy_0_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_dummy_0_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_dummy_1_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predCnt_dummy_1_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_lat_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_lat_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_dummy_0_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_dummy_0_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_dummy_1_0.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.INST_predRes_dummy_1_1.set_clk_0)("CLK");
  (mkTestbench_instance->INST_predictor_m.set_clk_0)("CLK");
  (mkTestbench_instance->INST_start_wire.set_clk_0)("CLK");
  (mkTestbench_instance->INST_start_reg_2.set_clk_0)("CLK");
  (mkTestbench_instance->INST_abort.set_clk_0)("CLK");
  (mkTestbench_instance->INST_state_set_pw.set_clk_0)("CLK");
  (mkTestbench_instance->INST_state_overlap_pw.set_clk_0)("CLK");
  (mkTestbench_instance->INST_state_fired_1.set_clk_0)("CLK");
  (mkTestbench_instance->set_clk_0)("CLK");
}
void MODEL_mkTestbench::destroy_model()
{
  delete mkTestbench_instance;
  mkTestbench_instance = NULL;
}
void MODEL_mkTestbench::reset_model(bool asserted)
{
  (mkTestbench_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTestbench::get_instance()
{
  return mkTestbench_instance;
}

/* Fill in version numbers */
void MODEL_mkTestbench::get_version(char const **name, char const **build)
{
  *name = "2024.01";
  *build = "ae2a2fc6";
}

/* Get the model creation time */
time_t MODEL_mkTestbench::get_creation_time()
{
  
  /* Tue Oct 22 19:31:56 UTC 2024 */
  return 1729625516llu;
}

/* State dumping function */
void MODEL_mkTestbench::dump_state()
{
  (mkTestbench_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTestbench & mkTestbench_backing(tSimStateHdl simHdl)
{
  static MOD_mkTestbench *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTestbench(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTestbench::dump_VCD_defs()
{
  (mkTestbench_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTestbench::dump_VCD(tVCDDumpType dt)
{
  (mkTestbench_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTestbench_backing(sim_hdl));
}
